generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model kelas {
  id          Int              @id @default(autoincrement())
  id_peserta  Int
  tipe_kelas  kelas_tipe_kelas
  nama_kelas  String           @db.VarChar(50)
  divisi      kelas_divisi
  jadwal      jadwal[]
  pendaftaran pendaftaran      @relation(fields: [id_peserta], references: [id], onDelete: Cascade, map: "kelas_ibfk_1")

  @@index([id_peserta], map: "id_peserta")
  @@index([id_peserta], map: "id_peserta_2")
}

model mahasiswa {
  id            Int           @id @default(autoincrement())
  user_id       Int
  nama          String        @db.VarChar(100)
  email         String        @db.VarChar(100)
  nomor_telepon String        @db.VarChar(15)
  prodi         String        @db.VarChar(50)
  semester      String        @db.VarChar(2)
  nim           String        @db.VarChar(15)
  users         users         @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "mahasiswa_ibfk_1")
  pendaftaran   pendaftaran[]

  @@index([user_id], map: "mahasiswa_ibfk_1")
}

model pendaftaran {
  id                  Int                       @id @default(autoincrement())
  mahasiswa_id        Int
  status              pendaftaran_status?       @default(pendaftar)
  bukti_pembayaran    String?                   @db.VarChar(255)
  divisi              pendaftaran_divisi
  tanggal_pendaftaran DateTime                  @default(now()) @db.Timestamp(0)
  pilihan_kelas       pendaftaran_pilihan_kelas
  kelas               kelas[]
  mahasiswa           mahasiswa                 @relation(fields: [mahasiswa_id], references: [id], onDelete: Cascade, map: "pendaftaran_ibfk_1")
  sertifikat          sertifikat[]

  @@index([mahasiswa_id], map: "pendaftaran_ibfk_1")
}

model sertifikat {
  id                  Int         @id @default(autoincrement())
  id_peserta          Int
  nomor_sertifikat    String?     @db.VarChar(50)
  tanggal_diterbitkan DateTime    @db.Date
  pendaftaran         pendaftaran @relation(fields: [id_peserta], references: [id], onDelete: Cascade, map: "id_peserta_fk")

  @@index([id_peserta], map: "id_peserta_fk")
}

model users {
  id            Int         @id @default(autoincrement())
  username      String      @db.VarChar(100)
  password      String      @db.VarChar(255)
  refresh_token String?     @db.Text
  role          users_role
  created_at    DateTime    @default(now()) @db.Timestamp(0)
  admin         admin[]
  mahasiswa     mahasiswa[]
}

model jadwal {
  id          Int     @id
  id_kelas    Int
  instruktur  String? @db.VarChar(50)
  hari        String  @db.VarChar(10)
  jam_mulai   String  @db.VarChar(5)
  jam_selesai String  @db.VarChar(5)
  kelas       kelas   @relation(fields: [id_kelas], references: [id], onDelete: Cascade, map: "id_kelas_fk")

  @@index([id_kelas], map: "id_kelas_fk")
}

model admin {
  id       Int    @id @default(autoincrement())
  users_id Int
  nama     String @db.VarChar(100)
  users    users  @relation(fields: [users_id], references: [id], onDelete: Cascade, map: "id_users_fk")

  @@index([users_id], map: "id_users_fk")
}

enum kelas_tipe_kelas {
  weekend
  weekday
}

enum users_role {
  super_admin
  admin
  mahasiswa
}

enum pendaftaran_status {
  pendaftar
  terdaftar
  peserta
  lulus
  remidi
}

enum kelas_divisi {
  pusbas
  puskom
}

enum pendaftaran_divisi {
  pusbas
  puskom
}

enum pendaftaran_pilihan_kelas {
  weekday
  weekend
}
